{"version":3,"sources":["components/movie-item/movie-item.jsx","utils/api.js","components/movie-tabs/movie-tabs.jsx","components/favorite/favorite-movies.jsx","components/sort-button/sort-button.jsx","components/loader/loader.jsx","components/pagination/pagination.jsx","components/search-panel/search-panel.jsx","components/nothing-search/nothing-search.js","components/App.jsx","index.js"],"names":["MovieItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","trimOverview","str","maxlength","length","concat","slice","split","join","getMovieImage","movie","image","backdrop_path","poster_path","handleClickRemove","setState","favorite","removeFromFavorite","handleClickAdd","addToFavorite","state","_this$props","removeMovie","react_default","a","createElement","className","src","alt","title","vote_average","overview","type","onClick","bind","React","Component","API_URL","API_KEY_3","MovieTabs","_ref","sort_by","updateSortBy","handleClick","value","getClassLink","isActiveClass","cn","active","FavoriteMovies","favoriteMovies","map","key","id","SortButton","rateUp","_this2","sortByRate","sortByReverseRate","Loader","role","randomstring","require","Pagination","page","totalPages","changePage","pagination__button--active","pageButtons","targetPage","Array","fill","index","creatButtons","disabled","generate","SearchPanel","onUpdateSearch","searchText","target","updateSearch","placeholder","onChange","NotFoundMovie","App","getMoviesFromServer","fetch","then","response","json","data","movies","results","isLoading","total_pages","catch","error","alert","console","log","updateMovies","filter","item","updateFavoriteMovies","toConsumableArray","prevState","sort","b","scrollTop","myRef","current","scrollIntoView","behavior","block","searchMovie","toLowerCase","includes","trim","createRef","prevProps","_this$state","visibleMovies","ref","search_panel","movie_tabs_MovieTabs","sort_button","pagination_pagination","nothing_search_NotFoundMovie","movie_item_movie_item","loader","favorite_movies_FavoriteMovies","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5a203cc1.chunk.js","sourcesContent":["import React from 'react';\nimport './movie-item.scss';\n\nclass MovieItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      favorite: false\n    };\n  }\n\n  trimOverview = (str, maxlength) => {\n    if (str.length > maxlength) {\n      return `${str.slice(0, maxlength).split('.').slice(0, -1).join('.')}.`;\n    }\n    return str;\n  }\n\n  getMovieImage = movie => {\n    const image = `https://image.tmdb.org/t/p/w500${movie.backdrop_path || movie.poster_path}`;\n    const noImage = 'https://stockpictures.io/wp-content/uploads/2020/01/image-not-found-big-768x432.png';\n    const isImage = movie.backdrop_path || movie.poster_path;\n\n    return isImage ? image : noImage;\n  }\n\n  handleClickRemove = (movie) => {\n    return () => {\n      this.setState({\n        favorite: false\n      });\n      this.props.removeFromFavorite(movie);\n    }\n  }\n\n  handleClickAdd = (movie) => {\n    return () => {\n      this.setState({\n        favorite: true\n      });\n      this.props.addToFavorite(movie);\n    }\n  }\n \n  render() {\n    const { movie, removeMovie } = this.props;\n    const { favorite } = this.state;\n    \n    return (\n      <div className=\"card\">\n        <img\n          className=\"card-img-top\"\n          src={this.getMovieImage(movie)}\n          alt=\"movie poster\" />\n        <div className=\"card-body\">\n          <h6 className=\"card-title\">{movie.title}</h6>\n          <p className=\"card-rate mb-4\">Rating: {movie.vote_average}</p>\n          <p className=\"card-overview\">\n            {this.trimOverview(movie.overview, 680)}\n          </p>\n          <div className=\"card-buttons d-flex flex-column align-items-end\">\n            {favorite ? (\n              <button \n                type=\"button\" \n                className=\"btn btn-secondary mb-2\" \n                onClick={this.handleClickRemove(movie)}\n              >\n                Remove Favorite\n              </button>\n            ) : (\n              <button \n                type=\"button\" \n                className=\"btn btn-success mb-2\" \n                onClick={this.handleClickAdd(movie)}\n              >\n                Add to Favorites\n              </button>\n            )}\n            <button \n              className=\"btn btn-danger\" \n              onClick={removeMovie.bind(null, movie)}\n            >\n              Delete movie\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieItem;","export const API_URL = \"https://api.themoviedb.org/3\";\n\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\n\nexport const API_KEY_4 =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\n","import React from 'react';\nimport cn from 'classnames';\nimport './movie-tabs.scss';\n\nexport const MovieTabs = ({ sort_by, updateSortBy }) => {\n  const handleClick = value => {\n    return () => updateSortBy(value)\n  };\n\n  const getClassLink = value => {\n    const isActiveClass = sort_by === value;\n    return cn('nav-link', {'active': isActiveClass});\n  }\n\n  return (\n    <ul className=\"tabs nav nav-pills\">\n      <li className=\"nav-item\">\n        <div \n          className={getClassLink(\"popularity.desc\")}\n          onClick={handleClick(\"popularity.desc\")}\n        >\n        Popularity\n        </div>\n      </li>\n      <li className=\"nav-item\">\n        <div \n          className={getClassLink(\"revenue.desc\")}\n          onClick={handleClick(\"revenue.desc\")}\n        >\n        Revenue\n        </div>\n      </li>\n      <li className=\"nav-item\">\n        <div \n          className={getClassLink(\"vote_average.desc\")}\n          onClick={handleClick(\"vote_average.desc\")}\n        >\n          Vote average\n        </div>\n      </li>\n    </ul>\n  )\n};","import React from 'react';\nimport './favorite.scss';\n\nexport const FavoriteMovies = ({ favoriteMovies }) => {\n\n  return (\n    <div className=\"col-3 favorite\">\n      <h3>Favorites: <br/> {favoriteMovies.length} movies</h3>\n      <ul className=\"list-group\">\n        {favoriteMovies.map(movie => {\n          return (\n            <li className=\"list-group-item\" key={movie.id}>\n              <div className=\"d-flex justify-content-between\">\n                <div>{movie.title}</div>\n                <div>{movie.vote_average}</div>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  )\n};","import React, { Component } from 'react';\n\nclass SortButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rateUp: true\n    };\n  }\n\n  render() {\n    const { sortByRate, sortByReverseRate } = this.props;\n    const { rateUp } = this.state;\n\n    return (\n      <div className=\"col align-self-center text-right\">\n        {rateUp ? (\n          <button \n            type=\"button\" \n            className=\"btn btn-primary\" \n            onClick={() => {\n              this.setState({\n                rateUp: false\n              });\n              sortByRate();\n            }}\n          >\n            Highest rating\n          </button>\n          ) : (\n          <button \n            type=\"button\" \n            className=\"btn btn-primary\" \n            onClick={() => {\n              this.setState({\n                rateUp: true\n              });\n              sortByReverseRate();\n            }}\n          >\n            Lowest rating\n          </button>\n        )}\n      </div>     \n    );\n  }\n}\n\nexport default SortButton;","import React from 'react';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader spinner-border text-primary\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n};\n\nexport default Loader;","import React from 'react';\nimport './pagination.scss';\nimport cn from 'classnames';\n\nconst randomstring = require('randomstring');\nconst separate = \"...\";\nconst maxShowPage = 5;\n\nconst creatButtons = (targetPage, totalPages) => {\n  if (totalPages < 6) {\n    return new Array(totalPages).fill('').map((value, index) => index + 1);\n  }\n\n  if (targetPage <= maxShowPage) {\n    return [1, 2, 3, 4, 5, separate, totalPages];\n  }\n  \n  if (targetPage >= maxShowPage && targetPage <= totalPages - maxShowPage) {\n    return [1, separate, targetPage -1, targetPage, targetPage + 1, separate, totalPages];\n  }\n  \n  return [1, separate, totalPages - 4, totalPages - 3, totalPages - 2, totalPages - 1, totalPages];\n};\n\nconst Pagination = ({ page, totalPages, changePage }) => {\n\n  const getClassLink = value => {\n    const isActiveClass = page === value;\n    return cn('pagination__button', {'pagination__button--active': isActiveClass});\n  }\n\n  const pageButtons = creatButtons(page, totalPages);\n  \n  return (\n    <div className=\"pagination\">\n      <button\n        disabled={page === 1 ? 'disabled' : ''}\n        className=\"pagination__button\" \n        onClick={() => changePage(page - 1)}\n      >\n        &laquo;\n      </button>\n      {pageButtons.map(value => (\n        <button\n          disabled={value === separate ? 'disabled' : ''}\n          className={getClassLink(value)}\n          key={randomstring.generate(5)}\n          onClick={() => changePage(value)}\n        >\n          {value}\n        </button>\n      ))}\n      <button\n        disabled={page === totalPages ? 'disabled' : ''}\n        className=\"pagination__button\" \n        onClick={() => changePage(page + 1)}\n      >\n        &raquo;\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;","import React, { Component } from 'react';\n\nclass SearchPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchText: ''\n    }\n  }\n\n  onUpdateSearch = ({ target }) => {\n    const searchText = target.value;\n    this.setState({searchText});\n    this.props.updateSearch(searchText);\n  }\n\n  render() {\n    return (\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        placeholder=\"Search movies\"\n        onChange={this.onUpdateSearch}\n      />\n    )\n  }\n}\n\nexport default SearchPanel;","import React from 'react';\nimport './nothing-search.scss';\n\nexport const NotFoundMovie = () => (\n  <div className=\"notFound-movie\">\n    <img src=\"https://avatars.mds.yandex.net/get-zen_doc/197997/pub_5ada0b7200b3ddc88a038800_5ada0c0148c85e73f0dcb9b7/scale_1200\" alt=\"no movie\" />\n    <p>Movie not found</p>\n  </div>\n);","import React from \"react\";\nimport MovieItem from './movie-item/movie-item';\nimport { API_URL, API_KEY_3 } from '../utils/api';\nimport { MovieTabs } from './movie-tabs/movie-tabs';\nimport { FavoriteMovies } from './favorite/favorite-movies';\nimport SortButton from './sort-button/sort-button';\nimport Loader from './loader/loader';\nimport Pagination from './pagination/pagination';\nimport SearchPanel from './search-panel/search-panel';\nimport { NotFoundMovie } from './nothing-search/nothing-search';\nimport './app.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      movies: [],\n      favoriteMovies: [],\n      sort_by: \"popularity.desc\",\n      isLoading: false,\n      page: 1,\n      totalPages: 0,\n      searchText: ''\n    };\n\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.getMoviesFromServer();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.sort_by !== this.state.sort_by ||\n    prevState.page !== this.state.page) {\n      this.getMoviesFromServer();\n    }\n  }\n\n  getMoviesFromServer = () => {\n    fetch(\n      `${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&page=${this.state.page}`\n    )\n    .then(response => response.json())\n    .then(data => {\n      this.setState({\n        movies: data.results,\n        isLoading: true,\n        totalPages: data.total_pages,\n      })\n    })\n    .catch(error => {\n      alert(`Something wrong... ${error}`)\n      console.log(error)\n    })\n  }\n\n  changePage = value => {\n    if (value > 0 && value <= this.state.totalPages) {\n      this.setState({\n        page: value,\n      });\n    }\n  };\n  \n  removeMovie = movie => {\n    const updateMovies = this.state.movies.filter(item => item.id !== movie.id);\n\n    this.setState({\n      movies: updateMovies\n    });\n  }\n\n  addToFavorite = movie => {\n    const updateFavoriteMovies = [...this.state.favoriteMovies, movie];\n\n    this.setState({\n      favoriteMovies: updateFavoriteMovies\n    });\n  }\n\n  removeFromFavorite = movie => {\n    const updateFavoriteMovies = this.state.favoriteMovies.filter(item => item.id !== movie.id);\n\n    this.setState({\n      favoriteMovies: updateFavoriteMovies\n    });\n  }\n\n  sortByRate = () => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies].sort((a, b) => b.vote_average - a.vote_average),\n    }));\n  }\n\n  sortByReverseRate = () => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies].sort((a, b) => a.vote_average - b.vote_average),\n    }));\n  }\n\n  updateSortBy = value => {\n    this.setState({\n      sort_by: value,\n      page: 1,\n    });\n  }\n\n  scrollTop = () => {\n    this.myRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n  }\n\n  searchMovie = (movies, searchText) => {\n    if (searchText.length === 0) {\n      return movies;\n    }\n\n    return movies.filter(movie => movie.title\n      .toLowerCase()\n      .includes(searchText.toLowerCase().trim()));\n  }\n\n  updateSearch = (searchText) => {\n    this.setState({searchText});\n  }\n\n  render() {\n    const { movies, favoriteMovies, sort_by, page, totalPages, isLoading, searchText } = this.state;\n    const visibleMovies = this.searchMovie(movies, searchText);\n\n    return (\n      <div className=\"container\" ref={this.myRef}>\n        <div className=\"row mt-4 wrapper\">\n          <div className=\"col-9 content\">\n          <div className=\"mb-3\">\n            <SearchPanel \n              updateSearch={this.updateSearch} \n            />\n          </div>\n            <div className=\"row mb-4 navigation\">\n             <div className=\"col-9\">\n              <MovieTabs \n                sort_by={sort_by} \n                updateSortBy={this.updateSortBy} \n              />\n             </div>\n              <SortButton \n                sortByRate={this.sortByRate} \n                sortByReverseRate={this.sortByReverseRate} \n              />\n            </div>\n            <div className=\"row justify-content-center\">\n              <Pagination\n                page={page}\n                totalPages={totalPages}\n                changePage={this.changePage}\n              />\n            </div>\n            <div className=\"row card_container\">\n              {!visibleMovies.length && <NotFoundMovie />}\n              {isLoading ? (\n                visibleMovies.map(movie => (\n                  <div className=\"col-6 mb-4 card_wrapper\" key={movie.id}>\n                    <MovieItem\n                      movie={movie}\n                      removeMovie={this.removeMovie}\n                      addToFavorite={this.addToFavorite}\n                      removeFromFavorite={this.removeFromFavorite}\n                    />\n                  </div>\n                ))\n               ) : <Loader />}\n            </div>\n          </div>\n          <FavoriteMovies favoriteMovies={favoriteMovies} />\n        </div>\n        <button \n          type=\"button\" \n          className=\"button__top\" \n          onClick={this.scrollTop}\n          title=\"Go to top\"\n        >\n          Top\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}